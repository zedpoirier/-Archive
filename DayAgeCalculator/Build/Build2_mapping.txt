bitter.jnibridge.JNIBridge -> bitter.jnibridge.JNIBridge:
    void <init>() -> <init>
    java.lang.Object invoke(long,java.lang.Class,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    void delete(long) -> delete
    java.lang.Object newInterfaceProxy(long,java.lang.Class[]) -> newInterfaceProxy
    void disableInterfaceProxy(java.lang.Object) -> disableInterfaceProxy
bitter.jnibridge.JNIBridge$a -> bitter.jnibridge.JNIBridge$a:
    java.lang.Object a -> a
    long b -> b
    java.lang.reflect.Constructor c -> c
    void <init>(long) -> <init>
    java.lang.Object a(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> a
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    void finalize() -> finalize
    void a() -> a
com.unity3d.player.Camera2Wrapper -> com.unity3d.player.Camera2Wrapper:
    android.content.Context a -> a
    com.unity3d.player.a b -> b
    int c -> c
    void <init>(android.content.Context) -> <init>
    void a() -> a
    void initCamera2Jni() -> initCamera2Jni
    void deinitCamera2Jni() -> deinitCamera2Jni
    void nativeFrameReady(java.lang.Object,java.lang.Object,java.lang.Object,int,int,int) -> nativeFrameReady
    void nativeSurfaceTextureReady(java.lang.Object) -> nativeSurfaceTextureReady
    int getCamera2Count() -> getCamera2Count
    int getCamera2SensorOrientation(int) -> getCamera2SensorOrientation
    boolean isCamera2FrontFacing(int) -> isCamera2FrontFacing
    int[] getCamera2Resolutions(int) -> getCamera2Resolutions
    boolean initializeCamera2(int,int,int,int,int) -> initializeCamera2
    boolean isCamera2AutoFocusPointSupported(int) -> isCamera2AutoFocusPointSupported
    boolean setAutoFocusPoint(float,float) -> setAutoFocusPoint
    android.graphics.Rect getFrameSizeCamera2() -> getFrameSizeCamera2
    void closeCamera2() -> closeCamera2
    void startCamera2() -> startCamera2
    void pauseCamera2() -> pauseCamera2
    void stopCamera2() -> stopCamera2
    int a(float) -> a
    java.lang.Object getCameraFocusArea(float,float) -> getCameraFocusArea
    void a(java.lang.Object,java.lang.Object,java.lang.Object,int,int,int) -> a
    void a(java.lang.Object) -> a
com.unity3d.player.GoogleARCoreApi -> com.unity3d.player.GoogleARCoreApi:
    void <init>() -> <init>
    void initializeARCore(android.app.Activity) -> initializeARCore
    void pauseARCore() -> pauseARCore
    void resumeARCore() -> resumeARCore
com.unity3d.player.GoogleVrApi -> com.unity3d.player.GoogleVrApi:
    java.util.concurrent.atomic.AtomicReference a -> a
    void <init>() -> <init>
    void a(com.unity3d.player.f) -> a
    void a() -> a
    com.unity3d.player.GoogleVrProxy b() -> b
    com.unity3d.player.GoogleVrVideo getGoogleVrVideo() -> getGoogleVrVideo
    void <clinit>() -> <clinit>
com.unity3d.player.GoogleVrProxy -> com.unity3d.player.GoogleVrProxy:
    boolean f -> f
    boolean g -> g
    java.lang.Runnable h -> h
    java.util.Vector i -> i
    android.view.SurfaceView j -> j
    com.unity3d.player.GoogleVrProxy$a k -> k
    java.lang.Thread l -> l
    android.os.Handler m -> m
    void <init>(com.unity3d.player.f) -> <init>
    void a(boolean) -> a
    boolean d() -> d
    boolean a() -> a
    void a(android.content.Intent) -> a
    void e() -> e
    void pauseGvrLayout() -> pauseGvrLayout
    void b() -> b
    void resumeGvrLayout() -> resumeGvrLayout
    boolean a(android.app.Activity,android.content.Context,android.view.SurfaceView,java.lang.Runnable) -> a
    long loadGoogleVr(boolean,boolean,boolean,boolean,boolean) -> loadGoogleVr
    void setGoogleVrModeEnabled(boolean) -> setGoogleVrModeEnabled
    void unloadGoogleVr() -> unloadGoogleVr
    int getVideoSurfaceId() -> getVideoSurfaceId
    java.lang.Object getVideoSurface() -> getVideoSurface
    void registerGoogleVrVideoListener(com.unity3d.player.GoogleVrVideo$GoogleVrVideoCallbacks) -> registerGoogleVrVideoListener
    void deregisterGoogleVrVideoListener(com.unity3d.player.GoogleVrVideo$GoogleVrVideoCallbacks) -> deregisterGoogleVrVideoListener
    void setVideoLocationTransform(float[]) -> setVideoLocationTransform
    void c() -> c
    boolean a(java.lang.ClassLoader) -> a
    boolean a(int) -> a
    void initVrJni() -> initVrJni
    void setVrVideoTransform(float[][]) -> setVrVideoTransform
    boolean isQuiting() -> isQuiting
    java.util.Vector a(com.unity3d.player.GoogleVrProxy) -> a
    java.lang.Runnable b(com.unity3d.player.GoogleVrProxy) -> b
    com.unity3d.player.GoogleVrProxy$a c(com.unity3d.player.GoogleVrProxy) -> c
    boolean d(com.unity3d.player.GoogleVrProxy) -> d
    void a(com.unity3d.player.GoogleVrProxy,boolean) -> a
com.unity3d.player.GoogleVrProxy$1 -> com.unity3d.player.GoogleVrProxy$1:
    com.unity3d.player.GoogleVrProxy a -> a
    void <init>(com.unity3d.player.GoogleVrProxy,android.os.Looper) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.unity3d.player.GoogleVrProxy$2 -> com.unity3d.player.GoogleVrProxy$2:
    java.util.concurrent.atomic.AtomicLong a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    com.unity3d.player.GoogleVrProxy g -> g
    void <init>(com.unity3d.player.GoogleVrProxy,java.util.concurrent.atomic.AtomicLong,boolean,boolean,boolean,boolean,boolean) -> <init>
    void run() -> run
com.unity3d.player.GoogleVrProxy$3 -> com.unity3d.player.GoogleVrProxy$3:
    boolean a -> a
    com.unity3d.player.GoogleVrProxy b -> b
    void <init>(com.unity3d.player.GoogleVrProxy,boolean) -> <init>
    void run() -> run
com.unity3d.player.GoogleVrProxy$4 -> com.unity3d.player.GoogleVrProxy$4:
    com.unity3d.player.GoogleVrProxy a -> a
    void <init>(com.unity3d.player.GoogleVrProxy) -> <init>
    void run() -> run
com.unity3d.player.GoogleVrProxy$a -> com.unity3d.player.GoogleVrProxy$a:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    com.unity3d.player.GoogleVrProxy g -> g
    void <init>(com.unity3d.player.GoogleVrProxy) -> <init>
    boolean a() -> a
    void b() -> b
com.unity3d.player.GoogleVrVideo -> com.unity3d.player.GoogleVrVideo:
    void registerGoogleVrVideoListener(com.unity3d.player.GoogleVrVideo$GoogleVrVideoCallbacks) -> registerGoogleVrVideoListener
    void deregisterGoogleVrVideoListener(com.unity3d.player.GoogleVrVideo$GoogleVrVideoCallbacks) -> deregisterGoogleVrVideoListener
    void setVideoLocationTransform(float[]) -> setVideoLocationTransform
com.unity3d.player.GoogleVrVideo$GoogleVrVideoCallbacks -> com.unity3d.player.GoogleVrVideo$GoogleVrVideoCallbacks:
    void onSurfaceAvailable(android.view.Surface) -> onSurfaceAvailable
    void onSurfaceUnavailable() -> onSurfaceUnavailable
    void onFrameAvailable() -> onFrameAvailable
com.unity3d.player.HFPStatus -> com.unity3d.player.HFPStatus:
    android.content.Context a -> a
    android.content.BroadcastReceiver b -> b
    android.content.Intent c -> c
    boolean d -> d
    android.media.AudioManager e -> e
    int f -> f
    void initHFPStatusJni() -> initHFPStatusJni
    void deinitHFPStatusJni() -> deinitHFPStatusJni
    void <init>(android.content.Context) -> <init>
    void a() -> a
    void requestHFPStat() -> requestHFPStat
    boolean getHFPStat() -> getHFPStat
    boolean a(com.unity3d.player.HFPStatus) -> a
    android.media.AudioManager b(com.unity3d.player.HFPStatus) -> b
    boolean a(com.unity3d.player.HFPStatus,boolean) -> a
    int a(com.unity3d.player.HFPStatus,int) -> a
    int c(com.unity3d.player.HFPStatus) -> c
com.unity3d.player.HFPStatus$1 -> com.unity3d.player.HFPStatus$1:
    com.unity3d.player.HFPStatus a -> a
    void <init>(com.unity3d.player.HFPStatus) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.unity3d.player.HFPStatus$a -> com.unity3d.player.HFPStatus$a:
    int a -> a
    int b -> b
    int c -> c
    int[] d -> d
    void <clinit>() -> <clinit>
com.unity3d.player.NativeLoader -> com.unity3d.player.NativeLoader:
    boolean load(java.lang.String) -> load
    boolean unload() -> unload
com.unity3d.player.ReflectionHelper -> com.unity3d.player.ReflectionHelper:
    boolean LOG -> LOG
    boolean LOGV -> LOGV
    com.unity3d.player.ReflectionHelper$a[] a -> a
    long b -> b
    void <init>() -> <init>
    boolean a(com.unity3d.player.ReflectionHelper$a) -> a
    void a(com.unity3d.player.ReflectionHelper$a,java.lang.reflect.Member) -> a
    java.lang.reflect.Constructor getConstructorID(java.lang.Class,java.lang.String) -> getConstructorID
    java.lang.reflect.Method getMethodID(java.lang.Class,java.lang.String,java.lang.String,boolean) -> getMethodID
    java.lang.reflect.Field getFieldID(java.lang.Class,java.lang.String,java.lang.String,boolean) -> getFieldID
    float a(java.lang.Class,java.lang.Class) -> a
    float a(java.lang.Class,java.lang.Class[],java.lang.Class[]) -> a
    java.lang.Class[] a(java.lang.String) -> a
    java.lang.Class a(java.lang.String,int[]) -> a
    java.lang.Object nativeProxyInvoke(int,java.lang.String,java.lang.Object[]) -> nativeProxyInvoke
    void nativeProxyFinalize(int) -> nativeProxyFinalize
    void nativeProxyLogJNIInvokeException() -> nativeProxyLogJNIInvokeException
    void endUnityLaunch() -> endUnityLaunch
    java.lang.Object newProxyInstance(int,java.lang.Class) -> newProxyInstance
    java.lang.Object newProxyInstance(int,java.lang.Class[]) -> newProxyInstance
    long a() -> a
    void b() -> b
    java.lang.Object a(int,java.lang.String,java.lang.Object[]) -> a
    void a(int) -> a
    void <clinit>() -> <clinit>
com.unity3d.player.ReflectionHelper$1 -> com.unity3d.player.ReflectionHelper$1:
    long c -> c
    int a -> a
    java.lang.Class[] b -> b
    void <init>(int,java.lang.Class[]) -> <init>
    java.lang.Object a(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> a
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    void finalize() -> finalize
com.unity3d.player.ReflectionHelper$a -> com.unity3d.player.ReflectionHelper$a:
    java.lang.Class b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    java.lang.reflect.Member a -> a
    void <init>(java.lang.Class,java.lang.String,java.lang.String) -> <init>
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.unity3d.player.UnityPlayer -> com.unity3d.player.UnityPlayer:
    android.app.Activity currentActivity -> currentActivity
    int c -> c
    boolean d -> d
    boolean e -> e
    com.unity3d.player.n f -> f
    java.util.concurrent.ConcurrentLinkedQueue g -> g
    android.content.BroadcastReceiver h -> h
    com.unity3d.player.UnityPlayer$e a -> a
    boolean i -> i
    com.unity3d.player.UnityPlayer$c j -> j
    android.telephony.TelephonyManager k -> k
    android.content.ClipboardManager l -> l
    com.unity3d.player.l m -> m
    com.unity3d.player.GoogleARCoreApi n -> n
    com.unity3d.player.UnityPlayer$a o -> o
    com.unity3d.player.Camera2Wrapper p -> p
    com.unity3d.player.HFPStatus q -> q
    android.content.Context r -> r
    android.view.SurfaceView s -> s
    boolean t -> t
    boolean u -> u
    boolean v -> v
    com.unity3d.player.q w -> w
    com.unity3d.player.k b -> b
    void <init>(android.content.Context) -> <init>
    void toggleGyroscopeSensor(boolean) -> toggleGyroscopeSensor
    void a() -> a
    void a(android.app.Activity) -> a
    boolean b() -> b
    android.view.SurfaceView c() -> c
    void d() -> d
    void a(int,android.view.Surface) -> a
    boolean b(int,android.view.Surface) -> b
    boolean displayChanged(int,android.view.Surface) -> displayChanged
    void UnitySendMessage(java.lang.String,java.lang.String,java.lang.String) -> UnitySendMessage
    void nativeUnitySendMessage(java.lang.String,java.lang.String,java.lang.String) -> nativeUnitySendMessage
    void e() -> e
    void a(java.lang.Runnable) -> a
    void init(int,boolean) -> init
    android.view.View getView() -> getView
    android.os.Bundle getSettings() -> getSettings
    void quit() -> quit
    void kill() -> kill
    void destroy() -> destroy
    void pause() -> pause
    void f() -> f
    void start() -> start
    void stop() -> stop
    void resume() -> resume
    void lowMemory() -> lowMemory
    void g() -> g
    void h() -> h
    boolean skipPermissionsDialog() -> skipPermissionsDialog
    void requestUserAuthorization(java.lang.String) -> requestUserAuthorization
    void configurationChanged(android.content.res.Configuration) -> configurationChanged
    void windowFocusChanged(boolean) -> windowFocusChanged
    boolean loadLibraryStatic(java.lang.String) -> loadLibraryStatic
    boolean loadLibrary(java.lang.String) -> loadLibrary
    void addPhoneCallListener() -> addPhoneCallListener
    void initJni(android.content.Context) -> initJni
    boolean nativeRender() -> nativeRender
    void nativeSetInputString(java.lang.String) -> nativeSetInputString
    void nativeSetInputSelection(int,int) -> nativeSetInputSelection
    void nativeSoftInputCanceled() -> nativeSoftInputCanceled
    void nativeSoftInputLostFocus() -> nativeSoftInputLostFocus
    boolean nativePause() -> nativePause
    void nativeResume() -> nativeResume
    void nativeLowMemory() -> nativeLowMemory
    void nativeFocusChanged(boolean) -> nativeFocusChanged
    void nativeRecreateGfxState(int,android.view.Surface) -> nativeRecreateGfxState
    void nativeSendSurfaceChangedEvent() -> nativeSendSurfaceChangedEvent
    void nativeDone() -> nativeDone
    void nativeSoftInputClosed() -> nativeSoftInputClosed
    void nativeInitWebRequest(java.lang.Class) -> nativeInitWebRequest
    boolean nativeInjectEvent(android.view.InputEvent) -> nativeInjectEvent
    boolean nativeIsAutorotationOn() -> nativeIsAutorotationOn
    void nativeMuteMasterAudio(boolean) -> nativeMuteMasterAudio
    void nativeRestartActivityIndicator() -> nativeRestartActivityIndicator
    void a(android.content.pm.ApplicationInfo) -> a
    void i() -> i
    void showSoftInput(java.lang.String,int,boolean,boolean,boolean,boolean,java.lang.String,int,boolean) -> showSoftInput
    void hideSoftInput() -> hideSoftInput
    void setSoftInputStr(java.lang.String) -> setSoftInputStr
    void setCharacterLimit(int) -> setCharacterLimit
    void setHideInputField(boolean) -> setHideInputField
    void setSelection(int,int) -> setSelection
    void reportSoftInputStr(java.lang.String,int,boolean) -> reportSoftInputStr
    void reportSoftInputSelection(int,int) -> reportSoftInputSelection
    void setClipboardText(java.lang.String) -> setClipboardText
    java.lang.String getClipboardText() -> getClipboardText
    boolean initializeGoogleAr() -> initializeGoogleAr
    boolean initializeGoogleVr() -> initializeGoogleVr
    boolean showVideoPlayer(java.lang.String,int,int,int,boolean,int,int) -> showVideoPlayer
    android.content.pm.ApplicationInfo j() -> j
    boolean k() -> k
    boolean l() -> l
    int getSplashMode() -> getSplashMode
    void executeGLThreadJobs() -> executeGLThreadJobs
    void disableLogger() -> disableLogger
    void b(java.lang.Runnable) -> b
    void a(com.unity3d.player.UnityPlayer$f) -> a
    boolean isFinishing() -> isFinishing
    void m() -> m
    boolean injectEvent(android.view.InputEvent) -> injectEvent
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    void a(android.view.View,android.view.View) -> a
    boolean addViewToPlayer(android.view.View,boolean) -> addViewToPlayer
    void removeViewFromPlayer(android.view.View) -> removeViewFromPlayer
    void reportError(java.lang.String,java.lang.String) -> reportError
    void a(com.unity3d.player.UnityPlayer,boolean) -> a
    boolean a(com.unity3d.player.UnityPlayer) -> a
    void b(com.unity3d.player.UnityPlayer) -> b
    boolean c(com.unity3d.player.UnityPlayer) -> c
    void d(com.unity3d.player.UnityPlayer) -> d
    void b(com.unity3d.player.UnityPlayer,boolean) -> b
    com.unity3d.player.l e(com.unity3d.player.UnityPlayer) -> e
    com.unity3d.player.l f(com.unity3d.player.UnityPlayer) -> f
    void a(com.unity3d.player.UnityPlayer,android.view.Surface) -> a
    void g(com.unity3d.player.UnityPlayer) -> g
    void h(com.unity3d.player.UnityPlayer) -> h
    void a(com.unity3d.player.UnityPlayer,int,android.view.Surface) -> a
    boolean i(com.unity3d.player.UnityPlayer) -> i
    android.view.SurfaceView j(com.unity3d.player.UnityPlayer) -> j
    void k(com.unity3d.player.UnityPlayer) -> k
    boolean l(com.unity3d.player.UnityPlayer) -> l
    boolean m(com.unity3d.player.UnityPlayer) -> m
    void n(com.unity3d.player.UnityPlayer) -> n
    void o(com.unity3d.player.UnityPlayer) -> o
    android.content.Context p(com.unity3d.player.UnityPlayer) -> p
    void q(com.unity3d.player.UnityPlayer) -> q
    void a(com.unity3d.player.UnityPlayer,java.lang.String) -> a
    void r(com.unity3d.player.UnityPlayer) -> r
    void a(com.unity3d.player.UnityPlayer,int,int) -> a
    android.view.SurfaceView s(com.unity3d.player.UnityPlayer) -> s
    com.unity3d.player.q t(com.unity3d.player.UnityPlayer) -> t
    boolean u(com.unity3d.player.UnityPlayer) -> u
    int v(com.unity3d.player.UnityPlayer) -> v
    void <clinit>() -> <clinit>
com.unity3d.player.UnityPlayer$1 -> com.unity3d.player.UnityPlayer$1:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.unity3d.player.UnityPlayer$10 -> com.unity3d.player.UnityPlayer$10:
    int a -> a
    int b -> b
    com.unity3d.player.UnityPlayer c -> c
    void <init>(com.unity3d.player.UnityPlayer,int,int) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$11 -> com.unity3d.player.UnityPlayer$11:
    boolean a -> a
    java.lang.String b -> b
    int c -> c
    com.unity3d.player.UnityPlayer d -> d
    void <init>(com.unity3d.player.UnityPlayer,boolean,java.lang.String,int) -> <init>
    void a() -> a
com.unity3d.player.UnityPlayer$12 -> com.unity3d.player.UnityPlayer$12:
    int a -> a
    int b -> b
    com.unity3d.player.UnityPlayer c -> c
    void <init>(com.unity3d.player.UnityPlayer,int,int) -> <init>
    void a() -> a
com.unity3d.player.UnityPlayer$13 -> com.unity3d.player.UnityPlayer$13:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$14 -> com.unity3d.player.UnityPlayer$14:
    com.unity3d.player.GoogleVrProxy a -> a
    java.lang.Runnable b -> b
    java.util.concurrent.Semaphore c -> c
    com.unity3d.player.UnityPlayer d -> d
    void <init>(com.unity3d.player.UnityPlayer,com.unity3d.player.GoogleVrProxy,java.lang.Runnable,java.util.concurrent.Semaphore) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$15 -> com.unity3d.player.UnityPlayer$15:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void a() -> a
com.unity3d.player.UnityPlayer$16 -> com.unity3d.player.UnityPlayer$16:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$17 -> com.unity3d.player.UnityPlayer$17:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$18 -> com.unity3d.player.UnityPlayer$18:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
com.unity3d.player.UnityPlayer$19 -> com.unity3d.player.UnityPlayer$19:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$2 -> com.unity3d.player.UnityPlayer$2:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$20 -> com.unity3d.player.UnityPlayer$20:
    int a -> a
    android.view.Surface b -> b
    java.util.concurrent.Semaphore c -> c
    com.unity3d.player.UnityPlayer d -> d
    void <init>(com.unity3d.player.UnityPlayer,int,android.view.Surface,java.util.concurrent.Semaphore) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$21 -> com.unity3d.player.UnityPlayer$21:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$22 -> com.unity3d.player.UnityPlayer$22:
    java.util.concurrent.Semaphore a -> a
    com.unity3d.player.UnityPlayer b -> b
    void <init>(com.unity3d.player.UnityPlayer,java.util.concurrent.Semaphore) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$23 -> com.unity3d.player.UnityPlayer$23:
    java.util.concurrent.Semaphore a -> a
    com.unity3d.player.UnityPlayer b -> b
    void <init>(com.unity3d.player.UnityPlayer,java.util.concurrent.Semaphore) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$3 -> com.unity3d.player.UnityPlayer$3:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$4 -> com.unity3d.player.UnityPlayer$4:
    com.unity3d.player.UnityPlayer a -> a
    java.lang.String b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    java.lang.String h -> h
    int i -> i
    boolean j -> j
    com.unity3d.player.UnityPlayer k -> k
    void <init>(com.unity3d.player.UnityPlayer,com.unity3d.player.UnityPlayer,java.lang.String,int,boolean,boolean,boolean,boolean,java.lang.String,int,boolean) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$5 -> com.unity3d.player.UnityPlayer$5:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$6 -> com.unity3d.player.UnityPlayer$6:
    java.lang.Runnable a -> a
    com.unity3d.player.UnityPlayer b -> b
    void <init>(com.unity3d.player.UnityPlayer,java.lang.Runnable) -> <init>
    void a() -> a
com.unity3d.player.UnityPlayer$7 -> com.unity3d.player.UnityPlayer$7:
    java.lang.String a -> a
    com.unity3d.player.UnityPlayer b -> b
    void <init>(com.unity3d.player.UnityPlayer,java.lang.String) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$8 -> com.unity3d.player.UnityPlayer$8:
    int a -> a
    com.unity3d.player.UnityPlayer b -> b
    void <init>(com.unity3d.player.UnityPlayer,int) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$9 -> com.unity3d.player.UnityPlayer$9:
    boolean a -> a
    com.unity3d.player.UnityPlayer b -> b
    void <init>(com.unity3d.player.UnityPlayer,boolean) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$a -> com.unity3d.player.UnityPlayer$a:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.unity3d.player.UnityPlayer$b -> com.unity3d.player.UnityPlayer$b:
    int a -> a
    int b -> b
    int c -> c
    int[] d -> d
    void <clinit>() -> <clinit>
com.unity3d.player.UnityPlayer$c -> com.unity3d.player.UnityPlayer$c:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
    void <init>(com.unity3d.player.UnityPlayer,byte) -> <init>
com.unity3d.player.UnityPlayer$d -> com.unity3d.player.UnityPlayer$d:
    com.unity3d.player.UnityPlayer$d a -> a
    com.unity3d.player.UnityPlayer$d b -> b
    com.unity3d.player.UnityPlayer$d c -> c
    com.unity3d.player.UnityPlayer$d d -> d
    com.unity3d.player.UnityPlayer$d e -> e
    com.unity3d.player.UnityPlayer$d f -> f
    com.unity3d.player.UnityPlayer$d g -> g
    com.unity3d.player.UnityPlayer$d h -> h
    com.unity3d.player.UnityPlayer$d[] i -> i
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.unity3d.player.UnityPlayer$e -> com.unity3d.player.UnityPlayer$e:
    android.os.Handler a -> a
    boolean b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.unity3d.player.UnityPlayer f -> f
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
    void a() -> a
    void b() -> b
    void a(java.lang.Runnable) -> a
    void c() -> c
    void d() -> d
    void b(java.lang.Runnable) -> b
    void c(java.lang.Runnable) -> c
    void d(java.lang.Runnable) -> d
    void a(com.unity3d.player.UnityPlayer$d) -> a
    void <init>(com.unity3d.player.UnityPlayer,byte) -> <init>
com.unity3d.player.UnityPlayer$e$1 -> com.unity3d.player.UnityPlayer$e$1:
    com.unity3d.player.UnityPlayer$e a -> a
    void <init>(com.unity3d.player.UnityPlayer$e) -> <init>
    void a() -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.unity3d.player.UnityPlayer$f -> com.unity3d.player.UnityPlayer$f:
    com.unity3d.player.UnityPlayer e -> e
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
    void a() -> a
    void <init>(com.unity3d.player.UnityPlayer,byte) -> <init>
com.unity3d.player.UnityPlayerActivity -> com.unity3d.player.UnityPlayerActivity:
    com.unity3d.player.UnityPlayer mUnityPlayer -> mUnityPlayer
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    void onStart() -> onStart
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onTrimMemory(int) -> onTrimMemory
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
com.unity3d.player.UnityWebRequest -> com.unity3d.player.UnityWebRequest:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.Map d -> d
    boolean e -> e
    int f -> f
    long g -> g
    long h -> h
    boolean i -> i
    boolean j -> j
    javax.net.ssl.HostnameVerifier k -> k
    void clearCookieCache(java.lang.String,java.lang.String) -> clearCookieCache
    void <init>(long,java.lang.String,java.util.Map,java.lang.String,boolean,int) -> <init>
    void setupTransferSettings(long,boolean,boolean) -> setupTransferSettings
    boolean hasTimedOut() -> hasTimedOut
    void run() -> run
    void runSafe() -> runSafe
    void headerCallback(long,java.lang.String,java.lang.String) -> headerCallback
    void headerCallback(java.lang.String,java.lang.String) -> headerCallback
    void headerCallback(java.util.Map) -> headerCallback
    int uploadCallback(long,java.nio.ByteBuffer) -> uploadCallback
    int uploadCallback(java.nio.ByteBuffer) -> uploadCallback
    void contentLengthCallback(long,int) -> contentLengthCallback
    void contentLengthCallback(int) -> contentLengthCallback
    boolean downloadCallback(long,java.nio.ByteBuffer,int) -> downloadCallback
    boolean downloadCallback(java.nio.ByteBuffer,int) -> downloadCallback
    boolean validateCertificateCallback(long,byte[]) -> validateCertificateCallback
    boolean validateCertificateCallback(byte[]) -> validateCertificateCallback
    void responseCodeCallback(int) -> responseCodeCallback
    void responseCodeCallback(long,int) -> responseCodeCallback
    void unknownHostCallback(java.lang.String) -> unknownHostCallback
    void badProtocolCallback(java.lang.String) -> badProtocolCallback
    void malformattedUrlCallback(java.lang.String) -> malformattedUrlCallback
    void sslCannotConnectCallback(javax.net.ssl.SSLException) -> sslCannotConnectCallback
    void errorCallback(java.lang.String) -> errorCallback
    void errorCallback(long,int,java.lang.String) -> errorCallback
    void <clinit>() -> <clinit>
com.unity3d.player.UnityWebRequest$1 -> com.unity3d.player.UnityWebRequest$1:
    void <init>() -> <init>
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.unity3d.player.UnityWebRequest$2 -> com.unity3d.player.UnityWebRequest$2:
    com.unity3d.player.UnityWebRequest b -> b
    void <init>(com.unity3d.player.UnityWebRequest) -> <init>
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.unity3d.player.a -> com.unity3d.player.a:
    com.unity3d.player.d a -> a
    android.hardware.camera2.CameraManager b -> b
    java.lang.String[] c -> c
    android.hardware.camera2.CameraDevice d -> d
    java.util.concurrent.Semaphore e -> e
    android.os.HandlerThread f -> f
    android.os.Handler g -> g
    android.graphics.Rect h -> h
    android.graphics.Rect i -> i
    int j -> j
    int k -> k
    float l -> l
    float m -> m
    int n -> n
    int o -> o
    boolean p -> p
    android.util.Range q -> q
    android.media.ImageReader r -> r
    android.media.Image s -> s
    android.hardware.camera2.CaptureRequest$Builder t -> t
    android.hardware.camera2.CameraCaptureSession u -> u
    java.lang.Object v -> v
    int w -> w
    android.graphics.SurfaceTexture x -> x
    android.view.Surface y -> y
    int z -> z
    android.hardware.camera2.CameraCaptureSession$CaptureCallback A -> A
    android.hardware.camera2.CameraDevice$StateCallback B -> B
    android.media.ImageReader$OnImageAvailableListener C -> C
    android.graphics.SurfaceTexture$OnFrameAvailableListener D -> D
    void <init>(com.unity3d.player.d) -> <init>
    android.hardware.camera2.CameraManager b(android.content.Context) -> b
    java.lang.String[] c(android.content.Context) -> c
    int a(android.content.Context) -> a
    int a(android.content.Context,int) -> a
    boolean b(android.content.Context,int) -> b
    boolean c(android.content.Context,int) -> c
    android.util.Size[] a(android.hardware.camera2.CameraCharacteristics) -> a
    int[] d(android.content.Context,int) -> d
    void g() -> g
    void h() -> h
    boolean a(android.content.Context,int,int,int,int,int) -> a
    void b(android.hardware.camera2.CameraCharacteristics) -> b
    boolean a(float,float) -> a
    android.graphics.Rect a() -> a
    void b() -> b
    void i() -> i
    void a(java.lang.Object) -> a
    void j() -> j
    void k() -> k
    void c() -> c
    void d() -> d
    void e() -> e
    void a(android.hardware.camera2.CameraDevice) -> a
    android.graphics.Rect a(android.util.Size[],double,double) -> a
    int a(android.util.Range[],int) -> a
    void a(com.unity3d.player.a,java.lang.Object) -> a
    android.hardware.camera2.CameraDevice a(com.unity3d.player.a) -> a
    java.lang.Object b(com.unity3d.player.a) -> b
    android.hardware.camera2.CameraCaptureSession a(com.unity3d.player.a,android.hardware.camera2.CameraCaptureSession) -> a
    android.hardware.camera2.CaptureRequest$Builder a(com.unity3d.player.a,android.hardware.camera2.CaptureRequest$Builder) -> a
    android.view.Surface c(com.unity3d.player.a) -> c
    android.hardware.camera2.CaptureRequest$Builder d(com.unity3d.player.a) -> d
    android.media.ImageReader e(com.unity3d.player.a) -> e
    android.util.Range f(com.unity3d.player.a) -> f
    void g(com.unity3d.player.a) -> g
    android.hardware.camera2.CameraDevice a(com.unity3d.player.a,android.hardware.camera2.CameraDevice) -> a
    java.util.concurrent.Semaphore f() -> f
    void b(com.unity3d.player.a,android.hardware.camera2.CameraDevice) -> b
    com.unity3d.player.d h(com.unity3d.player.a) -> h
    android.media.Image i(com.unity3d.player.a) -> i
    android.media.Image a(com.unity3d.player.a,android.media.Image) -> a
    void <clinit>() -> <clinit>
com.unity3d.player.a$1 -> com.unity3d.player.a$1:
    com.unity3d.player.a a -> a
    void <init>(com.unity3d.player.a) -> <init>
    void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult) -> onCaptureCompleted
    void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure) -> onCaptureFailed
    void onCaptureSequenceCompleted(android.hardware.camera2.CameraCaptureSession,int,long) -> onCaptureSequenceCompleted
    void onCaptureSequenceAborted(android.hardware.camera2.CameraCaptureSession,int) -> onCaptureSequenceAborted
com.unity3d.player.a$2 -> com.unity3d.player.a$2:
    com.unity3d.player.a a -> a
    void <init>(com.unity3d.player.a) -> <init>
    void onConfigured(android.hardware.camera2.CameraCaptureSession) -> onConfigured
    void onConfigureFailed(android.hardware.camera2.CameraCaptureSession) -> onConfigureFailed
com.unity3d.player.a$3 -> com.unity3d.player.a$3:
    com.unity3d.player.a a -> a
    void <init>(com.unity3d.player.a) -> <init>
    void onOpened(android.hardware.camera2.CameraDevice) -> onOpened
    void onClosed(android.hardware.camera2.CameraDevice) -> onClosed
    void onDisconnected(android.hardware.camera2.CameraDevice) -> onDisconnected
    void onError(android.hardware.camera2.CameraDevice,int) -> onError
com.unity3d.player.a$4 -> com.unity3d.player.a$4:
    com.unity3d.player.a a -> a
    void <init>(com.unity3d.player.a) -> <init>
    void onImageAvailable(android.media.ImageReader) -> onImageAvailable
com.unity3d.player.a$5 -> com.unity3d.player.a$5:
    com.unity3d.player.a a -> a
    void <init>(com.unity3d.player.a) -> <init>
    void onFrameAvailable(android.graphics.SurfaceTexture) -> onFrameAvailable
com.unity3d.player.a$a -> com.unity3d.player.a$a:
    int a -> a
    int b -> b
    int c -> c
    int[] d -> d
    void <clinit>() -> <clinit>
com.unity3d.player.b -> com.unity3d.player.b:
    javax.net.ssl.SSLSocketFactory a -> a
    com.unity3d.player.b$a b -> b
    javax.net.ssl.SSLSocketFactory c -> c
    javax.net.ssl.X509TrustManager d -> d
    java.lang.Object e -> e
    java.lang.Object f -> f
    boolean g -> g
    void <init>(com.unity3d.player.b$b[]) -> <init>
    javax.net.ssl.SSLSocketFactory a(com.unity3d.player.b$b) -> a
    javax.net.ssl.SSLSocketFactory b() -> b
    javax.net.ssl.X509TrustManager c() -> c
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket() -> createSocket
    java.net.Socket a(java.net.Socket) -> a
    java.lang.String[] getDefaultCipherSuites() -> getDefaultCipherSuites
    java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
    javax.net.ssl.X509TrustManager a() -> a
    void <clinit>() -> <clinit>
com.unity3d.player.b$a -> com.unity3d.player.b$a:
    void handshakeCompleted(javax.net.ssl.HandshakeCompletedEvent) -> handshakeCompleted
com.unity3d.player.b$b -> com.unity3d.player.b$b:
    javax.net.ssl.X509TrustManager a -> a
    void <init>() -> <init>
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.unity3d.player.c -> com.unity3d.player.c:
    com.unity3d.player.o a -> a
    com.unity3d.player.f b -> b
    android.content.Context c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    void <init>(java.lang.String,com.unity3d.player.f) -> <init>
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    boolean runOnUiThreadWithSync(java.lang.Runnable) -> runOnUiThreadWithSync
    void reportError(java.lang.String) -> reportError
com.unity3d.player.c$1 -> com.unity3d.player.c$1:
    java.lang.Runnable a -> a
    java.util.concurrent.Semaphore b -> b
    com.unity3d.player.c c -> c
    void <init>(com.unity3d.player.c,java.lang.Runnable,java.util.concurrent.Semaphore) -> <init>
    void run() -> run
com.unity3d.player.d -> com.unity3d.player.d:
    void a(java.lang.Object,java.lang.Object,java.lang.Object,int,int,int) -> a
    void a(java.lang.Object) -> a
com.unity3d.player.e -> com.unity3d.player.e:
    boolean a(android.app.Activity) -> a
    void a(android.app.Activity,java.lang.String) -> a
com.unity3d.player.f -> com.unity3d.player.f:
    boolean addViewToPlayer(android.view.View,boolean) -> addViewToPlayer
    void removeViewFromPlayer(android.view.View) -> removeViewFromPlayer
    void reportError(java.lang.String,java.lang.String) -> reportError
com.unity3d.player.g -> com.unity3d.player.g:
    boolean a -> a
    void Log(int,java.lang.String) -> Log
    void <clinit>() -> <clinit>
com.unity3d.player.h -> com.unity3d.player.h:
    void <init>() -> <init>
    boolean a(android.content.pm.PackageItemInfo) -> a
    boolean a(android.app.Activity) -> a
    void a(android.app.Activity,java.lang.String) -> a
com.unity3d.player.i -> com.unity3d.player.i:
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
com.unity3d.player.j -> com.unity3d.player.j:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    com.unity3d.player.e d -> d
    void <clinit>() -> <clinit>
com.unity3d.player.k -> com.unity3d.player.k:
    android.content.Context a -> a
    com.unity3d.player.UnityPlayer b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    void <init>(android.content.Context,com.unity3d.player.UnityPlayer,java.lang.String,int,boolean,boolean,boolean,java.lang.String,int,boolean) -> <init>
    void a(boolean) -> a
    void a(android.widget.EditText,java.lang.String,int,boolean,boolean,boolean,java.lang.String,int) -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    int a(int,boolean,boolean,boolean) -> a
    void a(java.lang.String,boolean) -> a
    void onClick(android.view.View) -> onClick
    void onBackPressed() -> onBackPressed
    android.view.View createSoftInputView() -> createSoftInputView
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    void a(int) -> a
    void a(int,int) -> a
    java.lang.String a(com.unity3d.player.k) -> a
    void a(com.unity3d.player.k,java.lang.String,boolean) -> a
    android.content.Context b(com.unity3d.player.k) -> b
    com.unity3d.player.UnityPlayer c(com.unity3d.player.k) -> c
    void <clinit>() -> <clinit>
com.unity3d.player.k$1 -> com.unity3d.player.k$1:
    com.unity3d.player.k a -> a
    void <init>(com.unity3d.player.k) -> <init>
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.unity3d.player.k$2 -> com.unity3d.player.k$2:
    com.unity3d.player.k a -> a
    void <init>(com.unity3d.player.k,android.content.Context) -> <init>
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onSelectionChanged(int,int) -> onSelectionChanged
com.unity3d.player.k$3 -> com.unity3d.player.k$3:
    com.unity3d.player.k a -> a
    void <init>(com.unity3d.player.k) -> <init>
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.unity3d.player.l -> com.unity3d.player.l:
    int a -> a
    int b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    void <init>(android.content.Context,int) -> <init>
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
com.unity3d.player.l$1 -> com.unity3d.player.l$1:
    int[] a -> a
    void <clinit>() -> <clinit>
com.unity3d.player.l$a -> com.unity3d.player.l$a:
    int a -> a
    int b -> b
    int c -> c
    int[] d -> d
    int[] a() -> a
    void <clinit>() -> <clinit>
com.unity3d.player.m -> com.unity3d.player.m:
    java.lang.Thread$UncaughtExceptionHandler a -> a
    void <init>() -> <init>
    boolean a() -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.unity3d.player.n -> com.unity3d.player.n:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    void <init>() -> <init>
    void a() -> a
    void b() -> b
    boolean c() -> c
    void a(boolean) -> a
    void b(boolean) -> b
    boolean d() -> d
    void c(boolean) -> c
    boolean e() -> e
    void d(boolean) -> d
    boolean f() -> f
    boolean g() -> g
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.unity3d.player.o -> com.unity3d.player.o:
    java.util.HashMap a -> a
    java.lang.Class b -> b
    java.lang.Object c -> c
    void <init>(java.lang.Class,java.lang.Object) -> <init>
    void a(java.lang.String,java.lang.Class[]) -> a
    void a(java.lang.String,com.unity3d.player.o$a) -> a
    java.lang.Object a(java.lang.String,java.lang.Object[]) -> a
com.unity3d.player.o$a -> com.unity3d.player.o$a:
    java.lang.Class[] a -> a
    java.lang.reflect.Method b -> b
    com.unity3d.player.o c -> c
    void <init>(com.unity3d.player.o,java.lang.Class[]) -> <init>
com.unity3d.player.p -> com.unity3d.player.p:
    boolean a -> a
    android.content.Context b -> b
    android.view.SurfaceView c -> c
    android.view.SurfaceHolder d -> d
    java.lang.String e -> e
    int f -> f
    int g -> g
    boolean h -> h
    long i -> i
    long j -> j
    android.widget.FrameLayout k -> k
    android.view.Display l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    android.media.MediaPlayer q -> q
    android.widget.MediaController r -> r
    boolean s -> s
    boolean t -> t
    int u -> u
    boolean v -> v
    boolean w -> w
    com.unity3d.player.p$a x -> x
    com.unity3d.player.p$b y -> y
    int z -> z
    void b(java.lang.String) -> b
    void <init>(android.content.Context,java.lang.String,int,int,int,boolean,long,long,com.unity3d.player.p$a) -> <init>
    boolean a() -> a
    void a(int) -> a
    void destroyPlayer() -> destroyPlayer
    void c() -> c
    void CancelOnPrepare() -> CancelOnPrepare
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onBufferingUpdate(android.media.MediaPlayer,int) -> onBufferingUpdate
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    void onVideoSizeChanged(android.media.MediaPlayer,int,int) -> onVideoSizeChanged
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void doCleanUp() -> doCleanUp
    void d() -> d
    void updateVideoLayout() -> updateVideoLayout
    boolean canPause() -> canPause
    boolean canSeekBackward() -> canSeekBackward
    boolean canSeekForward() -> canSeekForward
    int getBufferPercentage() -> getBufferPercentage
    int getCurrentPosition() -> getCurrentPosition
    int getDuration() -> getDuration
    boolean isPlaying() -> isPlaying
    void pause() -> pause
    void seekTo(int) -> seekTo
    void start() -> start
    boolean b() -> b
    void a(java.lang.String) -> a
    void <clinit>() -> <clinit>
com.unity3d.player.p$a -> com.unity3d.player.p$a:
    void a(int) -> a
com.unity3d.player.p$b -> com.unity3d.player.p$b:
    com.unity3d.player.p b -> b
    boolean c -> c
    com.unity3d.player.p a -> a
    void <init>(com.unity3d.player.p,com.unity3d.player.p) -> <init>
    void run() -> run
    void a() -> a
com.unity3d.player.q -> com.unity3d.player.q:
    com.unity3d.player.UnityPlayer a -> a
    android.content.Context b -> b
    com.unity3d.player.q$a c -> c
    java.util.concurrent.Semaphore d -> d
    java.util.concurrent.locks.Lock e -> e
    com.unity3d.player.p f -> f
    int g -> g
    boolean h -> h
    boolean i -> i
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    boolean a(android.content.Context,java.lang.String,int,int,int,boolean,long,long,com.unity3d.player.q$a) -> a
    void d() -> d
    void a() -> a
    void b() -> b
    void c() -> c
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    com.unity3d.player.p a(com.unity3d.player.q) -> a
    int a(com.unity3d.player.q,int) -> a
    java.util.concurrent.Semaphore b(com.unity3d.player.q) -> b
    com.unity3d.player.p a(com.unity3d.player.q,com.unity3d.player.p) -> a
    android.content.Context c(com.unity3d.player.q) -> c
    java.util.concurrent.locks.Lock d(com.unity3d.player.q) -> d
    boolean e(com.unity3d.player.q) -> e
    void f(com.unity3d.player.q) -> f
    com.unity3d.player.UnityPlayer g(com.unity3d.player.q) -> g
    boolean h(com.unity3d.player.q) -> h
com.unity3d.player.q$1 -> com.unity3d.player.q$1:
    java.lang.String a -> a
    int b -> b
    int c -> c
    int d -> d
    boolean e -> e
    long f -> f
    long g -> g
    com.unity3d.player.q h -> h
    void <init>(com.unity3d.player.q,java.lang.String,int,int,int,boolean,long,long) -> <init>
    void run() -> run
com.unity3d.player.q$1$1 -> com.unity3d.player.q$1$1:
    com.unity3d.player.q$1 a -> a
    void <init>(com.unity3d.player.q$1) -> <init>
    void a(int) -> a
com.unity3d.player.q$1$1$1 -> com.unity3d.player.q$1$1$1:
    com.unity3d.player.q$1$1 a -> a
    void <init>(com.unity3d.player.q$1$1) -> <init>
    void run() -> run
com.unity3d.player.q$2 -> com.unity3d.player.q$2:
    com.unity3d.player.q a -> a
    void <init>(com.unity3d.player.q) -> <init>
    void run() -> run
com.unity3d.player.q$3 -> com.unity3d.player.q$3:
    com.unity3d.player.q a -> a
    void <init>(com.unity3d.player.q) -> <init>
    void run() -> run
com.unity3d.player.q$4 -> com.unity3d.player.q$4:
    com.unity3d.player.q a -> a
    void <init>(com.unity3d.player.q) -> <init>
    void run() -> run
com.unity3d.player.q$a -> com.unity3d.player.q$a:
    void a() -> a
org.fmod.FMODAudioDevice -> org.fmod.FMODAudioDevice:
    java.lang.Thread a -> a
    boolean b -> b
    android.media.AudioTrack c -> c
    boolean d -> d
    java.nio.ByteBuffer e -> e
    byte[] f -> f
    org.fmod.a g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    void <init>() -> <init>
    void start() -> start
    void stop() -> stop
    void close() -> close
    boolean isRunning() -> isRunning
    void run() -> run
    void releaseAudioTrack() -> releaseAudioTrack
    int fmodGetInfo(int) -> fmodGetInfo
    int fmodProcess(java.nio.ByteBuffer) -> fmodProcess
    int fmodProcessMicData(java.nio.ByteBuffer,int) -> fmodProcessMicData
    int startAudioRecord(int,int,int) -> startAudioRecord
    void stopAudioRecord() -> stopAudioRecord
    void <clinit>() -> <clinit>
org.fmod.a -> org.fmod.a:
    org.fmod.FMODAudioDevice a -> a
    java.nio.ByteBuffer b -> b
    int c -> c
    int d -> d
    int e -> e
    java.lang.Thread f -> f
    boolean g -> g
    android.media.AudioRecord h -> h
    boolean i -> i
    void <init>(org.fmod.FMODAudioDevice,int,int) -> <init>
    int a() -> a
    void b() -> b
    void c() -> c
    void run() -> run
    void d() -> d
